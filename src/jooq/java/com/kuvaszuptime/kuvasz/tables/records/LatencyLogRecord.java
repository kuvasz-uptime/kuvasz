/*
 * This file is generated by jOOQ.
 */
package com.kuvaszuptime.kuvasz.tables.records;


import com.kuvaszuptime.kuvasz.tables.LatencyLog;

import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LatencyLogRecord extends UpdatableRecordImpl<LatencyLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>latency_log.id</code>.
     */
    public LatencyLogRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>latency_log.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>latency_log.monitor_id</code>.
     */
    public LatencyLogRecord setMonitorId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>latency_log.monitor_id</code>.
     */
    public Integer getMonitorId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>latency_log.latency</code>. Lateny in ms
     */
    public LatencyLogRecord setLatency(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>latency_log.latency</code>. Lateny in ms
     */
    public Integer getLatency() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>latency_log.created_at</code>.
     */
    public LatencyLogRecord setCreatedAt(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>latency_log.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LatencyLogRecord
     */
    public LatencyLogRecord() {
        super(LatencyLog.LATENCY_LOG);
    }

    /**
     * Create a detached, initialised LatencyLogRecord
     */
    public LatencyLogRecord(Integer id, Integer monitorId, Integer latency, OffsetDateTime createdAt) {
        super(LatencyLog.LATENCY_LOG);

        setId(id);
        setMonitorId(monitorId);
        setLatency(latency);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }
}

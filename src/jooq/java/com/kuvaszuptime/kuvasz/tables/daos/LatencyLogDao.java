/*
 * This file is generated by jOOQ.
 */
package com.kuvaszuptime.kuvasz.tables.daos;


import com.kuvaszuptime.kuvasz.tables.LatencyLog;
import com.kuvaszuptime.kuvasz.tables.pojos.LatencyLogPojo;
import com.kuvaszuptime.kuvasz.tables.records.LatencyLogRecord;

import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LatencyLogDao extends DAOImpl<LatencyLogRecord, LatencyLogPojo, Integer> {

    /**
     * Create a new LatencyLogDao without any configuration
     */
    public LatencyLogDao() {
        super(LatencyLog.LATENCY_LOG, LatencyLogPojo.class);
    }

    /**
     * Create a new LatencyLogDao with an attached configuration
     */
    public LatencyLogDao(Configuration configuration) {
        super(LatencyLog.LATENCY_LOG, LatencyLogPojo.class, configuration);
    }

    @Override
    public Integer getId(LatencyLogPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<LatencyLogPojo> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(LatencyLog.LATENCY_LOG.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<LatencyLogPojo> fetchById(Integer... values) {
        return fetch(LatencyLog.LATENCY_LOG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public LatencyLogPojo fetchOneById(Integer value) {
        return fetchOne(LatencyLog.LATENCY_LOG.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<LatencyLogPojo> fetchOptionalById(Integer value) {
        return fetchOptional(LatencyLog.LATENCY_LOG.ID, value);
    }

    /**
     * Fetch records that have <code>monitor_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<LatencyLogPojo> fetchRangeOfMonitorId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(LatencyLog.LATENCY_LOG.MONITOR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>monitor_id IN (values)</code>
     */
    public List<LatencyLogPojo> fetchByMonitorId(Integer... values) {
        return fetch(LatencyLog.LATENCY_LOG.MONITOR_ID, values);
    }

    /**
     * Fetch records that have <code>latency BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<LatencyLogPojo> fetchRangeOfLatency(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(LatencyLog.LATENCY_LOG.LATENCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>latency IN (values)</code>
     */
    public List<LatencyLogPojo> fetchByLatency(Integer... values) {
        return fetch(LatencyLog.LATENCY_LOG.LATENCY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<LatencyLogPojo> fetchRangeOfCreatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(LatencyLog.LATENCY_LOG.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<LatencyLogPojo> fetchByCreatedAt(OffsetDateTime... values) {
        return fetch(LatencyLog.LATENCY_LOG.CREATED_AT, values);
    }
}
